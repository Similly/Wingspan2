- implement model View (DONE)
  * seperate packages for the model and the View
  --> rename game package to model
    * move main class out of the package and use it as the conroller
    * remove all print or scanner statements and replace it with function calls from the View
  --> create View package with View class
    * implement methods for all things that need to be printed
    * add method to get user input

- update board class
  * fields array to contain BIrds nnot Strings -- done
  * add birdsOnWetlands function -- done
  
  
- update bird class (DONE)
 * max eggcount
 * different habitats (enum)
 * different foodtypes (enum)
 * score
 * (special power) (maybe later)
 
- update all the functions which are using the old bird fields(requiredfood, habitat) (IMPORTANT)
 * functions should use the new fields instead (DONE for the models, needs to be implemented for the view)
 
- update player class
 * update layEggs 
  * eggs should be layed on birds on the board
 * update drawBirdCard function
  * amount of cards to draw depends on how many birds are in the wetlands
 
- test cases
 * implement Unit Tests for all your functions
 * write acceptance test Cases in AcceptanceTestMain
 
 - update scoring mechanism
 
- bonus cards (maybe later)
 
